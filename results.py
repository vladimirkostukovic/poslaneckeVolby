import requests
from bs4 import BeautifulSoup
import pandas as pd
import time
from tqdm import tqdm

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª links.csv
file_path = "links.csv"
links_df = pd.read_csv(file_path)

# –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ ps311
links_df = links_df.dropna(subset=["ps311_Obec_Link"])

# –§–∞–π–ª—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
SUMMARY_FILE = "election_summary.csv"
PARTY_FILE = "party_results.csv"

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö
election_summary = []
party_results = []


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def parse_election_summary(url, kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")

    try:
        stats = soup.find("table", {"id": "ps311_t1"}).find_all("td", class_="cislo")
        if len(stats) < 9:
            return None

        data = [
            kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name,
            stats[0].text.strip(), stats[1].text.strip(), stats[2].text.strip(),
            stats[3].text.strip(), stats[4].text.strip(), stats[5].text.strip(),
            stats[6].text.strip(), stats[7].text.strip()
        ]
        return data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è {url}: {e}")
        return None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–∞—Ä—Ç–∏—è–º
def parse_party_results(url, kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")

    party_data = []
    table_rows = soup.find_all("tr")

    for row in table_rows:
        cols = row.find_all("td")
        if len(cols) >= 4:
            party_name = cols[1].text.strip()
            votes = cols[2].text.strip()
            percent = cols[3].text.strip()

            party_data.append([
                kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name,
                party_name, votes, percent
            ])

    return party_data


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Å—ã–ª–∫–∏
for index, row in tqdm(links_df.iterrows(), total=len(links_df), desc="üì• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç—ã"):
    kraj_id = row["Kraj_ID"]
    kraj_name = row["Kraj_N√°zev"]
    okres_id = row["Okres_ID"]
    okres_name = row["Okres_N√°zev"]
    obec_id = row["Obec_ID"]
    obec_name = row["Obec_N√°zev"]
    ps311_link = row["ps311_Obec_Link"]

    # –ü–∞—Ä—Å–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    summary_data = parse_election_summary(ps311_link, kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name)
    if summary_data:
        election_summary.append(summary_data)

    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–∞—Ä—Ç–∏—è–º
    party_data = parse_party_results(ps311_link, kraj_id, kraj_name, okres_id, okres_name, obec_id, obec_name)
    party_results.extend(party_data)

    time.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
pd.DataFrame(election_summary, columns=[
    "Kraj_ID", "Kraj_N√°zev", "Okres_ID", "Okres_N√°zev", "Obec_ID", "Obec_N√°zev",
    "Okrsky celkem", "Okrsky zpr.", "% zpr.", "Voliƒçi", "Ob√°lky vydan√©", "√öƒçast",
    "Odevzdan√© –æ–±√°l–∫–∏", "Platn√© hlasy"
]).to_csv(SUMMARY_FILE, index=False, encoding="utf-8")

pd.DataFrame(party_results, columns=[
    "Kraj_ID", "Kraj_N√°zev", "Okres_ID", "Okres_N√°zev", "Obec_ID", "Obec_N√°zev",
    "Strana", "Hlasy", "%"
]).to_csv(PARTY_FILE, index=False, encoding="utf-8")

print("‚úÖ –ì–æ—Ç–æ–≤–æ! –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ CSV.")